trigger:
- master
- rel/*

jobs:
- job: Windows

  pool:
    vmImage: 'windows-2022'

  variables: 
    BuildConfiguration: Release
    ANDROID_NDK_HOME: C:\Microsoft\AndroidNDK64\android-ndk-r16b
    ANDROID_NDK_PATH: C:\Microsoft\AndroidNDK64\android-ndk-r16b
    AndroidNdkDirectory: C:\Microsoft\AndroidNDK64\android-ndk-r16b 

  steps:
  
  - task: UseDotNet@2
    inputs:
      packageType: 'runtime'
      version: '2.2.0'

  - template: build/ci/canary.yml

  - task: BatchScript@1
    inputs:
      filename: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat"
      arguments: -no_logo
      modifyEnvironment: true
    displayName: Setup Environment Variables
    
  - powershell: .\build\Install-WindowsSdkISO.ps1 18362
    displayName: Install Windows SDK 18362
    
  - task: NuGetToolInstaller@0
    displayName: Use NuGet 5.6.0
    inputs:
      versionSpec: 5.6.0

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '3.1.101'
    displayName: Use .NET Core SDK 3.1.101

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '5.0.402'
    displayName: Use .NET SDK 5.0.402

  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '6.0.300'
    displayName: Use .NET SDK 6.0.300

  - template: build/ci/dotnet-install-windows.yml
  - template: build/ci/jdk-setup.yml

  - task: DotNetCoreCLI@2  
    inputs:
      command: custom
      custom: tool
      arguments: install --tool-path . nbgv
    displayName: Install NBGV tool
  
  - script: nbgv cloud
    displayName: Set Version
    
  - powershell: .\build\build.ps1
    displayName: Build 

  - template: build/ci/sign-packages.yml

  - task: PublishBuildArtifacts@1
    displayName: Publish Package Artifacts
    inputs:
      pathToPublish: .\bin\nupkg
      artifactType: container
      artifactName: WCT-Packages
    condition: always()

- job: linux

  container: unoplatform/wasm-build:2.3

  pool:
    vmImage: 'ubuntu-latest'

  variables:
    NUGET_PACKAGES: $(build.sourcesdirectory)/.nuget

  steps:
  - checkout: self
    clean: true

  - template: build/ci/canary.yml

  - bash: |
      cd $(build.sourcesdirectory)/CommunityToolkit.WinUI.SampleApp.Wasm
      dotnet msbuild /r /nr:false /m:1 /p:Configuration=Release /p:UnoUIUseRoslynSourceGenerators=false /p:UnoUIVersionOverride=true $(build.sourcesdirectory)/CommunityToolkit.WinUI.SampleApp.Wasm/CommunityToolkit.WinUI.SampleApp.Wasm.csproj /p:TargetFrameworksOverride=net8.0 /bl:$(build.artifactstagingdirectory)/build.binlog

  - task: CopyFiles@2
    displayName: 'Publish Wasm Binaries'
    inputs:
      SourceFolder: $(build.sourcesdirectory)/CommunityToolkit.WinUI.SampleApp.Wasm/bin/Release/net8.0/dist
      Contents: '**/*.*'
      TargetFolder: $(build.artifactstagingdirectory)
      CleanTargetFolder: false
      OverWrite: false
      flattenFolders: false

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: wct-aot-drop
      ArtifactType: Container
